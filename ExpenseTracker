import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class ExpenseTracker {
    public static void main(String[] args) {
        JFrame frame = new JFrame("Expense Tracker");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(600, 400);

        // Components
        JLabel descLabel = new JLabel("Description:");
        JTextField descField = new JTextField(15);

        JLabel amountLabel = new JLabel("Amount:");
        JTextField amountField = new JTextField(10);

        JLabel categoryLabel = new JLabel("Category:");
        String[] categories = {"Food", "Transport", "Utilities", "Entertainment", "Others"};
        JComboBox<String> categoryBox = new JComboBox<>(categories);

        JButton addButton = new JButton("Add Expense");

        // Table to display expenses
        String[] columns = {"Description", "Amount", "Category"};
        DefaultTableModel tableModel = new DefaultTableModel(columns, 0);
        JTable expenseTable = new JTable(tableModel);

        JScrollPane tableScrollPane = new JScrollPane(expenseTable);

        // Total Expense Label
        JLabel totalLabel = new JLabel("Total Expense: â‚¹0.0");

        // Layout
        JPanel inputPanel = new JPanel();
        inputPanel.add(descLabel);
        inputPanel.add(descField);
        inputPanel.add(amountLabel);
        inputPanel.add(amountField);
        inputPanel.add(categoryLabel);
        inputPanel.add(categoryBox);
        inputPanel.add(addButton);

        frame.setLayout(new BorderLayout());
        frame.add(inputPanel, BorderLayout.NORTH);
        frame.add(tableScrollPane, BorderLayout.CENTER);
        frame.add(totalLabel, BorderLayout.SOUTH);

        frame.setVisible(true);

        // Add Button Action Listener
        addButton.addActionListener(new ActionListener() {
            double totalExpense = 0;

            @Override
            public void actionPerformed(ActionEvent e) {
                String description = descField.getText();
                String amountText = amountField.getText();
                String category = (String) categoryBox.getSelectedItem();

                if (description.isEmpty() || amountText.isEmpty()) {
                    JOptionPane.showMessageDialog(frame, "Please enter a description and amount.", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                try {
                    double amount = Double.parseDouble(amountText);
                    totalExpense += amount;

                    // Add to table
                    tableModel.addRow(new Object[]{description, String.format("%.2f", amount), category});

                    // Update total
                    totalLabel.setText("Total Expense: $" + String.format("%.2f", totalExpense));

                    // Clear input fields
                    descField.setText("");
                    amountField.setText("");
                } catch (NumberFormatException ex) {
                    JOptionPane.showMessageDialog(frame, "Invalid amount. Please enter a numeric value.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        });
    }
}
